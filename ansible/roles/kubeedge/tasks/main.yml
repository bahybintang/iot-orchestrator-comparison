- name: Disable swap
  shell: |
    swapoff -a

- name: Install Docker
  apt:
    update_cache: true
    name: docker.io
    state: present

- name: Set Docker cgroup driver
  copy:
    src: daemon.json
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0644
  notify: Restart Docker

- meta: flush_handlers

- name: Install k3s as master
  shell: |
    curl -sfL https://get.k3s.io | 
      K3S_NODE_NAME="{{ hostvars[inventory_hostname].vars['k8s_hostname'] }}" \
      INSTALL_K3S_VERSION="v1.22.17+k3s1" \
      sh -s - \
      --write-kubeconfig-mode 644 \
      --docker \
      --disable traefik \
      --disable metrics-server \
      --disable local-storage \
      --node-external-ip "{{ wg_ip }}" \
      --advertise-address "{{ wg_ip }}" \
      --token "{{ k3s_token }}" \
      --node-label "cloud-computing/master=true" \
      --flannel-iface wg0
  vars:
    wg_ip: "{{ hostvars[inventory_hostname].vars['wg_ip'] }}"
  when: "'master' in group_names"

- name: Check k3s up
  service:
    name: k3s
    state: started
    enabled: yes
  register: k3s
  until: k3s.status.ActiveState == "active"
  retries: 15
  delay: 20
  when: "'master' in group_names"

- name: Install keadm
  shell: |
    wget "https://github.com/kubeedge/kubeedge/releases/download/v1.12.1/keadm-v1.12.1-linux-$( [ $(uname -m) = armv7l ] && echo arm || echo amd64).tar.gz"
    tar -zxvf "keadm-v1.12.1-linux-$( [ $(uname -m) = armv7l ] && echo arm || echo amd64).tar.gz"
    cp "keadm-v1.12.1-linux-$( [ $(uname -m) = armv7l ] && echo arm || echo amd64)/keadm/keadm" /usr/local/bin/keadm
    rm "keadm-v1.12.1-linux-$( [ $(uname -m) = armv7l ] && echo arm || echo amd64).tar.gz"
    rm -rf "keadm-v1.12.1-linux-$( [ $(uname -m) = armv7l ] && echo arm || echo amd64)"

- name: Init kubeedge cloudcore
  shell: |
    keadm init --advertise-address="{{ hostvars[inventory_hostname].vars['wg_ip'] }}" --profile version=v1.12.1 --kube-config=/etc/rancher/k3s/k3s.yaml
  when: "'master' in group_names"
  ignore_errors: true

- name: Wait until cloudcore up
  shell: |
    kubectl get pods -n kubeedge -o wide | grep cloudcore | grep Running
  retries: 15
  delay: 20
  register: cloudcore
  until: cloudcore.stdout.find("1/1") != -1
  when: "'master' in group_names"

- name: Get token
  shell: |
    keadm gettoken --kube-config=/etc/rancher/k3s/k3s.yaml
  register: kubeedge_token
  when: "'master' in group_names"

- set_fact:
    kubeedge_token: "{{ kubeedge_token.stdout }}"
  when: "'master' in group_names"

- name: Init kubeedge edgecore
  shell: |
    keadm join --edgenode-name "{{ hostvars[inventory_hostname].vars['k8s_hostname'] }}" --cloudcore-ipport="{{ hostvars[groups['master'][0]].vars['wg_ip'] }}":10000 --token="{{ hostvars[groups['master'][0]]['kubeedge_token'] }}" --kubeedge-version=v1.12.1
  when: "'worker' in group_names"

- name: Set node label worker
  shell: |
    kubectl label node "{{ hostvars[inventory_hostname].vars['k8s_hostname'] }}" cloud-computing/worker=true
  delegate_to: "{{ groups['master'][0] }}"
  when: "'worker' in group_names and not 'edge' in group_names"

- name: Set node label edge
  shell: |
    kubectl label node "{{ hostvars[inventory_hostname].vars['k8s_hostname'] }}" cloud-computing/edge=true
  delegate_to: "{{ groups['master'][0] }}"
  when: "'edge' in group_names"
